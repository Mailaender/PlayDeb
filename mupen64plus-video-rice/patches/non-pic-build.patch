Description: Fix symbol references for non-PIC builds
Author: Richard Goedeken <Richard@fascinationsoftware.com>
Origin: upstream, https://bitbucket.org/richard42/mupen64plus-video-rice/changeset/09de024e3784

---
diff --git a/src/FrameBuffer.cpp b/src/FrameBuffer.cpp
index f6c712f145358813b25a9a87426f11105ce4c942..ee61b2e969c8eb7cd6203d1f6b6a18b0cadf8649 100644
--- a/src/FrameBuffer.cpp
+++ b/src/FrameBuffer.cpp
@@ -667,30 +667,30 @@ l1:             mov esi, [ecx+ebx]
                      );
 #elif !defined(NO_ASM)
 # if !defined(__PIC__)
-           asm volatile("pusha                             \n"
-                "mov    pAsmStart, %%ecx           \n"  // = pStart
-                "mov    $0, %%edx                  \n"          // The CRC
-                "mov    dwAsmHeight, %%eax         \n"  // = y
-                "0:                                \n" //l2:
-                "mov    dwAsmdwBytesPerLine, %%ebx \n"  // = x
-                "sub    $4, %%ebx                  \n"
-                "1:                                \n" //l1:
-                "mov    (%%ecx,%%ebx), %%esi       \n"
-                "xor %%ebx, %%esi                  \n"
-                "rol $4, %%edx                     \n"
-                "add %%esi, %%edx                  \n"
-                "sub    $4, %%ebx                  \n"
-                "jge 1b                            \n" //jge l1
-                "xor %%eax, %%esi                  \n"
-                "add %%esi, %%edx                  \n"
-                "add dwAsmPitch, %%ecx             \n"
-                "dec %%eax                         \n"
-                "jge 0b                            \n" //jge l2
+           asm volatile("pusha                        \n"
+                "mov    %[pAsmStart], %%ecx           \n"  // = pStart
+                "mov    $0, %%edx                     \n"          // The CRC
+                "mov    %[dwAsmHeight], %%eax         \n"  // = y
+                "0:                                   \n" //l2:
+                "mov    %[dwAsmdwBytesPerLine], %%ebx \n"  // = x
+                "sub    $4, %%ebx                     \n"
+                "1:                                   \n" //l1:
+                "mov    (%%ecx,%%ebx), %%esi          \n"
+                "xor %%ebx, %%esi                     \n"
+                "rol $4, %%edx                        \n"
+                "add %%esi, %%edx                     \n"
+                "sub    $4, %%ebx                     \n"
+                "jge 1b                               \n" //jge l1
+                "xor %%eax, %%esi                     \n"
+                "add %%esi, %%edx                     \n"
+                "add %[dwAsmPitch], %%ecx             \n"
+                "dec %%eax                            \n"
+                "jge 0b                               \n" //jge l2
                 
-                "mov    %%edx, dwAsmCRC            \n"
-                "popa                              \n"
-                :
-                :
+                "mov    %%edx, %[dwAsmCRC]            \n"
+                "popa                                 \n"
+                : [pAsmStart]"+m"(pAsmStart), [dwAsmHeight]"+m"(dwAsmHeight), [dwAsmCRC]"=m"(dwAsmCRC)
+                : [dwAsmdwBytesPerLine]"m"(dwAsmdwBytesPerLine), [dwAsmPitch]"m"(dwAsmPitch)
                 : "memory", "cc"
                 );
 # else // defined(__PIC__)
