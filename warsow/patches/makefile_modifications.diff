Some makefile modifications, making it more useful in building
Debian packages.
===================================================================
Index: warsow-1.5/source/source/Makefile
===================================================================
--- warsow-1.5.orig/source/source/Makefile	2014-05-07 20:46:33.312297454 +0200
+++ warsow-1.5/source/source/Makefile	2014-05-07 20:57:54.148291642 +0200
@@ -54,7 +54,7 @@
 else
 CC?=gcc
 CXX?=g++
-LD=gcc
+LD?=gcc
 LXX=g++
 AR=ar
 RANLIB=ranlib
@@ -79,7 +79,7 @@
 SHARED_LIBRARY_EXTENSION=so
 endif
 
-BUILDDIR=build$(ARCH)
+BUILDDIR=build
 
 ifeq ($(DEBUG_BUILD), YES)
 BINDIR=debug
@@ -152,7 +152,7 @@
 
 CFLAGS_COMMON=-D_M_IX86 $(CFLAGS) -MD -I. -Iwin32/include -I../libsrcs/zlib -I../libsrcs/libcurl/include -D__WIN32 -D__USE_LARGEFILE -D__USE_LARGEFILE64 -mwindows -Wall -Wno-unknown-pragmas -Wno-unused-function -Winvalid-pch
 CFLAGS_RELEASE=-O2 -fno-strict-aliasing -ffast-math -funroll-loops -DNDEBUG
-CFLAGS_DEBUG=-O0 -ggdb -D_DEBUG
+CFLAGS_DEBUG=-O0 -g -D_DEBUG
 ifeq ($(DEBUG_BUILD),YES)
 CFLAGS_COMMON+=$(CFLAGS_DEBUG)
 else
@@ -227,13 +227,13 @@
 CLIENT_EXE=warsow_$(ARCH).exe
 SERVER_EXE=wsw_server_$(ARCH).exe
 TV_SERVER_EXE=wswtv_server_$(ARCH).exe
-else # USE_MINGW
+else # when USE_MINGW=NO
 ####################### NORMAL *NIX? ######################
 LOCALBASE?=/usr/local
 
 CFLAGS_COMMON=$(CFLAGS) -pipe -I. -I$(LOCALBASE)/include -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -Wall -Wno-unused-function -fvisibility=hidden -Winvalid-pch
 CFLAGS_RELEASE=-O2 -fno-strict-aliasing -ffast-math -funroll-loops -DNDEBUG -msse2
-CFLAGS_DEBUG=-O0 -ggdb -D_DEBUG
+CFLAGS_DEBUG=-O0 -D_DEBUG
 ifeq ($(DEBUG_BUILD),YES)
 CFLAGS_COMMON+=$(CFLAGS_DEBUG)
 else
@@ -242,16 +242,16 @@
 
 CFLAGS_CLIENT=$(shell curl-config --cflags)
 CFLAGS_DED=-DDEDICATED_ONLY -DC_ONLY $(shell curl-config --cflags)
-CFLAGS_MODULE=-DPIC -fPIC
+CFLAGS_MODULE=-DPIC -fPIC -D_REENTRANT
 CFLAGS_TV_SERVER=-DDEDICATED_ONLY -DTV_SERVER_ONLY -DC_ONLY -DTV_MODULE_HARD_LINKED
 
 LDFLAGS_COMMON=$(LDFLAGS)
 LXXFLAGS_COMMON=$(LDFLAGS) -lstdc++ -lsupc++
 
 ifeq ($(OS),FreeBSD)
-LDFLAGS_COMMON+= -L$(LOCALBASE)/lib -lm
+LDFLAGS_COMMON+= -L/usr/lib -lm -pthread
 else
-LDFLAGS_COMMON+= -L$(LOCALBASE)/lib -lm -ldl -O1 -Wl,--as-needed
+LDFLAGS_COMMON+= -L/usr/lib -ldl -lm -Wl,-O1
 endif
 
 ifneq ($(DEBUG_BUILD),YES)
@@ -259,11 +259,7 @@
 LXXFLAGS_COMMON+= -s
 endif
 
-ifeq ($(ARCH),x86_64)
-LIB=lib64
-else
 LIB=lib
-endif
 
 LDFLAGS_CLIENT=-lz -lpthread -lX11 -lXext -lXi -lXrandr -lrt $(shell curl-config --libs)
 LDFLAGS_DED=-lz -lpthread $(shell curl-config --libs)
@@ -312,9 +308,9 @@
 LDFLAGS_IRC=
 LDFLAGS_ANGELWRAP=$(ANGELSCRIPT_LIB) -lpthread
 
-CLIENT_EXE=warsow.$(ARCH)
-SERVER_EXE=wsw_server.$(ARCH)
-TV_SERVER_EXE=wswtv_server.$(ARCH)
+CLIENT_EXE=warsow_bin
+SERVER_EXE=wsw_server_bin
+TV_SERVER_EXE=wswtv_server_bin
 endif # USE_MINGW
 
 ####################### MAC support ######################
@@ -325,7 +321,7 @@
 LOCALBASE?=/usr
 CFLAGS_COMMON=-arch ppc -arch i386 -I. -I$(LOCALBASE)/include -Wall -isysroot /Developer/SDKs/MacOSX10.4u.sdk -mmacosx-version-min=10.4
 CFLAGS_RELEASE=-O2 -fno-strict-aliasing -ffast-math -funroll-loops -DNDEBUG -fvisibility=hidden
-CFLAGS_DEBUG=-O0 -ggdb -D_DEBUG
+CFLAGS_DEBUG=-O0 -g -D_DEBUG
 ifeq ($(DEBUG_BUILD),YES)
 CFLAGS_COMMON+=$(CFLAGS_DEBUG)
 else
@@ -358,21 +354,18 @@
 ######################################################################################################
 # Helper functions
 ######################################################################################################
-DO_CC=echo "  > Compiling $<" && \
-	$(CC) $(CFLAGS_COMMON) -c $< -o $@
-DO_CXX=echo "  > Compiling (c++) $<" && \
-	$(CXX) $(CFLAGS_COMMON) $(CXXFLAGS_COMMON) -c $< -o $@
-DO_RES=echo "  > Compiling resource $<" && \
-	$(RES) $(RESFLAGS_COMMON) -i $< -o $@
-
-DO_CC_CLIENT=$(DO_CC) $(CFLAGS_CLIENT)
-DO_CC_DED=$(DO_CC) $(CFLAGS_DED)
-DO_CC_MODULE=$(DO_CC) $(CFLAGS_MODULE)
-DO_CC_TV_SERVER=$(DO_CC) $(CFLAGS_TV_SERVER)
+DO_CC=$(CC) $(CFLAGS_COMMON) -c $< -o $@
+DO_CXX=$(CXX) $(CFLAGS_COMMON) $(CXXFLAGS_COMMON) -c $< -o $@
+DO_RES=$(RES) $(RESFLAGS_COMMON) -i $< -o $@
+
+DO_CC_CLIENT=@echo "$(DO_CC) $(CFLAGS_CLIENT)" && $(DO_CC) $(CFLAGS_CLIENT)
+DO_CC_DED=@echo "$(DO_CC) $(CFLAGS_DED)" && $(DO_CC) $(CFLAGS_DED)
+DO_CC_MODULE=@echo "$(DO_CC) $(CFLAGS_MODULE)" && $(DO_CC) $(CFLAGS_MODULE)
+DO_CC_TV_SERVER=@echo "$(DO_CC) $(CFLAGS_TV_SERVER)" && $(DO_CC) $(CFLAGS_TV_SERVER)
 
-DO_CXX_MODULE=$(DO_CXX) $(CFLAGS_MODULE)
+DO_CXX_MODULE=@echo "$(DO_CXX) $(CFLAGS_MODULE)" && $(DO_CXX) $(CFLAGS_MODULE)
 
-DO_RES_CLIENT=$(DO_RES)
+DO_RES_CLIENT=@echo "$(DO_RES)" && $(DO_RES)
 
 ######################################################################################################
 # Files
@@ -856,12 +849,13 @@
 
 ######################################################################################################
 # Linking Rules
+# Need to display all options used for later viewing from build logs.
 ######################################################################################################
 ########
 # DED
 ########
 $(BINDIR)/$(SERVER_EXE): $(OBJS_DED)
-	@echo "  > Linking $@" && \
+	@echo "$(LD) -o $@ $^ $(LDFLAGS_COMMON) $(LDFLAGS_DED)" && \
 	$(LD) -o $@ $^ $(LDFLAGS_COMMON) $(LDFLAGS_DED)
 
 #########
@@ -869,11 +863,11 @@
 #########
 ifeq ($(OS),Darwin)
 $(BINDIR)/$(CLIENT_EXE): $(OBJS_CLIENT)
-	@echo "  > Linking $@" && \
+	@echo "$(LD) -o $@ $(OBJS_CLIENT) mac/SDLMain.m $(LDFLAGS_COMMON) $(LDFLAGS_CLIENT)" && \
 	$(LD) -o $@ $(OBJS_CLIENT) mac/SDLMain.m $(LDFLAGS_COMMON) $(LDFLAGS_CLIENT)
 else
 $(BINDIR)/$(CLIENT_EXE): $(OBJS_CLIENT)
-	@echo "  > Linking $@" && \
+	@echo "$(LD) -o $@ $(OBJS_CLIENT) $(LDFLAGS_COMMON) $(LDFLAGS_CLIENT)" && \
 	$(LD) -o $@ $(OBJS_CLIENT) $(LDFLAGS_COMMON) $(LDFLAGS_CLIENT)
 endif
 
@@ -881,60 +875,60 @@
 # OPENAL
 #########
 $(BINDIR)/libs/snd_openal_$(ARCH).$(SHARED_LIBRARY_EXTENSION): $(OBJS_OPENAL)
-	@echo "  > Linking $@" && \
+	@echo "$(LD) -o $@ $^ $(LDFLAGS_COMMON) $(LDFLAGS_MODULE) $(LDFLAGS_OPENAL)" && \
 	$(LD) -o $@ $^ $(LDFLAGS_COMMON) $(LDFLAGS_MODULE) $(LDFLAGS_OPENAL)
 
 #########
 # QF
 #########
 $(BINDIR)/libs/snd_qf_$(ARCH).$(SHARED_LIBRARY_EXTENSION): $(OBJS_QF)
-	@echo "  > Linking $@" && \
+	@echo "$(LD) -o $@ $^ $(LDFLAGS_COMMON) $(LDFLAGS_MODULE) $(LDFLAGS_QF)" && \
 	$(LD) -o $@ $^ $(LDFLAGS_COMMON) $(LDFLAGS_MODULE) $(LDFLAGS_QF)
 
 ########
 # .SO
 ########
 $(BINDIR)/basewsw/cgame_$(ARCH).$(SHARED_LIBRARY_EXTENSION): $(OBJS_CGAME)
-	@echo "  > Linking $@" && \
+	@echo "$(LD) -o $@ $^ $(LDFLAGS_COMMON) $(LDFLAGS_MODULE)" && \
 	$(LXX) -o $@ $^ $(LXXFLAGS_COMMON) $(LDFLAGS_MODULE)
 
 $(BINDIR)/basewsw/game_$(ARCH).$(SHARED_LIBRARY_EXTENSION): $(OBJS_GAME)
-	@echo "  > Linking $@" && \
+	@echo "$(LD) -o $@ $^ $(LDFLAGS_COMMON) $(LDFLAGS_MODULE)" && \
 	$(LXX) -o $@ $^ $(LXXFLAGS_COMMON) $(LDFLAGS_MODULE)
 
 $(BINDIR)/basewsw/ui_$(ARCH).$(SHARED_LIBRARY_EXTENSION): $(OBJS_UI_ROCKET) $(LIBROCKET_LIB)
-	@echo "  > Linking $@" && \
+	@echo "$(LXX) -o $@ $^ $(LXXFLAGS_COMMON) $(LDFLAGS_MODULE) $(LDFLAGS_ROCKET)" && \
 	$(LXX) -o $@ $^ $(LXXFLAGS_COMMON) $(LDFLAGS_MODULE) $(LDFLAGS_ROCKET)
 
 $(BINDIR)/libs/irc_$(ARCH).$(SHARED_LIBRARY_EXTENSION): $(OBJS_IRC)
-	@echo "  > Linking $@" && \
+	@echo "$(LD) -o $@ $^ $(LDFLAGS_COMMON) $(LDFLAGS_MODULE) $(LDFLAGS_IRC)" && \
 	$(LD) -o $@ $^ $(LDFLAGS_COMMON) $(LDFLAGS_MODULE) $(LDFLAGS_IRC)
 
 $(BINDIR)/libs/cin_$(ARCH).$(SHARED_LIBRARY_EXTENSION): $(OBJS_CIN)
-	@echo "  > Linking $@" && \
+	@echo "$(LD) -o $@ $^ $(LDFLAGS_COMMON) $(LDFLAGS_MODULE) $(LDFLAGS_CIN)" && \
 	$(LD) -o $@ $^ $(LDFLAGS_COMMON) $(LDFLAGS_MODULE) $(LDFLAGS_CIN)
 
 $(BINDIR)/libs/ftlib_$(ARCH).$(SHARED_LIBRARY_EXTENSION): $(OBJS_FTLIB)
-	@echo "  > Linking $@" && \
+	@echo "$(LD) -o $@ $^ $(LDFLAGS_COMMON) $(LDFLAGS_MODULE) $(LDFLAGS_FTLIB)" && \
 	$(LD) -o $@ $^ $(LDFLAGS_COMMON) $(LDFLAGS_MODULE) $(LDFLAGS_FTLIB)
 
 $(BINDIR)/libs/steamlib_$(ARCH).$(SHARED_LIBRARY_EXTENSION): $(OBJS_STEAMLIB)
-	@echo "  > Linking $@" && \
+	@echo "$(LD) -o $@ $^ $(LXXFLAGS_COMMON) $(LDFLAGS_MODULE) $(LDFLAGS_STEAMLIB)" && \
 	$(LXX) -o $@ $^ $(LXXFLAGS_COMMON) $(LDFLAGS_MODULE) $(LDFLAGS_STEAMLIB)
 
 $(BINDIR)/libs/ref_gl_$(ARCH).$(SHARED_LIBRARY_EXTENSION): $(OBJS_REF_GL)
-	@echo "  > Linking $@" && \
+	@echo "$(LD) -o $@ $^ $(LDFLAGS_COMMON) $(LDFLAGS_MODULE) $(LDFLAGS_REF_GL)" && \
 	$(LD) -o $@ $^ $(LDFLAGS_COMMON) $(LDFLAGS_MODULE) $(LDFLAGS_REF_GL)
 
 $(BINDIR)/libs/angelwrap_$(ARCH).$(SHARED_LIBRARY_EXTENSION): $(OBJS_ANGELWRAP) $(ANGELSCRIPT_LIB)
-	@echo "  > Linking $@" && \
+	@echo "$(LD) -o $@ $^ $(LDFLAGS_COMMON) $(LDFLAGS_MODULE) $(LDFLAGS_REF_GL)" && \
 	$(LXX) -o $@ $^ $(LXXFLAGS_COMMON) $(LDFLAGS_MODULE) $(LDFLAGS_ANGELWRAP)
 
 ########
 # TV
 ########
 $(BINDIR)/$(TV_SERVER_EXE): $(OBJS_TV_SERVER)
-	@echo "  > Linking $@" && \
+	@echo "$(LD) -o $@ $^ $(LDFLAGS_COMMON) $(LDFLAGS_TV_SERVER)" && \
 	$(LD) -o $@ $^ $(LDFLAGS_COMMON) $(LDFLAGS_TV_SERVER)
 
 ######################################################################################################
