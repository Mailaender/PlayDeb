Remove invalid tests.
Index: raydium-0.0svn20100207/configure
===================================================================
--- raydium-0.0svn20100207.orig/configure	2014-04-06 19:17:54.093497736 +0200
+++ raydium-0.0svn20100207/configure	2014-04-06 19:30:56.557491056 +0200
@@ -222,6 +222,7 @@
     echo "   Renaming $php to raydium/php/ ..."
     mv "$php" "raydium/php"
     exit_if_error "$?" "Is this script up to date ?"
+    patch -p1 < debian/patches/ftbfs.patch
 
 # check for 64bits
 	
@@ -374,48 +375,6 @@
 test_build "Xinerama" "$file" "-L/usr/X11R6/lib/ -lXinerama"
 exit_if_error "$?" "You must install libxinerama-devel package"
 
-# Full GL/GLU test, looking for hardware accel
-if [ $disable_x = "no" ]; then
-    file='
-// define a dummy Raydium background for myglut :
-#define RAYDIUM_RENDERING_WINDOW                0
-#define RAYDIUM_RENDERING_FULLSCREEN            1
-#define RAYDIUM_RENDERING_NONE                  2
-#define RAYDIUM_RENDERING_WINDOW_FIXED          10
-#define RAYDIUM_KEYBOARD_SIZE                   256
-
-#define DONT_INCLUDE_HEADERS
-#define raydium_log printf
-#define __rayapi
-#define __global
-signed char    raydium_key[256];
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include "raydium/myglut.c"
-int main(int argc, char **argv) { 
-char *r;
-glutInit(&argc,argv);
-myglutCreateWindow(320,240,RAYDIUM_RENDERING_WINDOW,"GL test");
-
-#ifdef USE_GLEW
-glewInit();
-#else
-r=(char *)glGetString(GL_RENDERER);
-if(!strcmp(r,"Mesa GLX Indirect"))
-    {
-    fprintf(stderr,"WARNING ! Indirect rendering detected !");
-    fprintf(stdout,"WARNING ! Indirect rendering detected !");
-    }
-#endif
-return 0; }
-'
-    test_build "GL/GLU hardware support" "$file" "-L/usr/X11R6/lib/ -lGL -lGLU"
-    exit_if_error "$?" "Full GL test failed, see configure.log"
-else
-    echo " DISABLED";
-fi
-
 # GLEW ("The OpenGL Extension Wrangler Library")
 # Using previous "file" (GL/GLU test)
 test_build "GLEW" "$file" "-DUSE_GLEW -L/usr/X11R6/lib/ -lGL -lGLU -lGLEW"
@@ -432,53 +391,6 @@
 # Check PHP installation
 php_install
 
-# OpenAL
-file="
-#include <AL/al.h>
-#include <AL/alc.h>
-#include <AL/alut.h>
-#include <time.h>
-#include <stdio.h>
-#include <stdlib.h>
-#include <sys/time.h>
-#include <sys/types.h>
-#include <unistd.h>
-int main(int argc, char **argv) {
-ALCdevice *dev;
-const ALbyte *initstr=(const ALbyte *) \"'( ( devices '( native null ) ) )\";
-dev=alcOpenDevice(initstr);
-sleep(1);
-alcCloseDevice(dev);
-return 0; }"
-test_build "OpenAL" "$file" "-lopenal"
-exit_if_error "$?" "openal-devel is required. Official CVS may be a good idea"
-
-# OpenAL 1.1
-file="
-#include <AL/al.h>
-#include <AL/alc.h>
-#include <AL/alut.h>
-#include <time.h>
-#include <stdio.h>
-#include <stdlib.h>
-#include <sys/time.h>
-#include <sys/types.h>
-#include <unistd.h>
-int main(int argc, char **argv) {
-ALCdevice *dev;
-const ALbyte *initstr=(const ALbyte *) \"'( ( devices '( native null ) ) )\";
-dev=alcOpenDevice(initstr);
-sleep(1);
-#ifndef ALUT_API_MAJOR_VERSION
-#error ALUT for OpenAL 1.1 is required
-#endif
-alcCloseDevice(dev);
-return 0; }"
-test_build "OpenAL 1.1 and ALUT" "$file" "-lopenal -lalut"
-if [ $? != 0 ]; then
-    echo "WARNING: Cannot find OpenAL 1.1 and ALUT. You can try to remove -lalut from Makefile and/or *comp*sh scripts, but Raydium with OpenAL 1.0 is not supported."
-fi
-
 # OGG/Vorbis
 file='
 #include <stdio.h>
